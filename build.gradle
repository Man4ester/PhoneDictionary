apply plugin: 'eclipse'
apply plugin: 'java'


import groovy.sql.Sql
import groovy.io.FileType

def getSqlFile(def email) {
        def lst = []
        def dir = new File("sql-files/")
        dir.eachFileRecurse(FileType.FILES) {file ->
                if(file.name.endsWith(".sql")){
                        def flag = false
                        file.eachLine() { line ->
                                if(line.toString().contains(email))
                                        flag = true
                        }
			if(!flag)
                                lst << file
                        else
                                println "${file.name} was runned before and skipped!"
                }
        }
        return lst
}

def update() {
        def sql = Sql.newInstance("jdbc:mysql://localhost:3306/", "root", "", "com.mysql.jdbc.Driver")
        def email = ""
	"git config --local user.email".execute().text.eachLine() { email += it}
        def sqlComment = "#"
        getSqlFile(email).each { sqlSyntax ->
                println "Running ${sqlSyntax} script..."
		def query = ""
                sqlSyntax.eachLine() { line ->
                        if(line?.trim() && !line.startsWith(sqlComment))
				query += line.trim()
			if(query?.trim() && query.endsWith(";")){
				println "\t${query}...\n"
                                sql.execute(query)
				query = ""
			}
                }
                sqlSyntax.append "\n${sqlComment}${email}"
        }
}

jar {
        baseName = 'phone'
        version = '0.0.1'
}

repositories {
    	mavenCentral()
}
configurations {
    	driver
}
dependencies {
    	driver "mysql:mysql-connector-java:5.1.18"
	compile ("org.springframework:spring-web:4.0.3.RELEASE")
}


URLClassLoader loader = GroovyObject.class.classLoader

configurations.driver.each {File file ->
    loader.addURL(file.toURL())
}

task updateDB << {
    update()
}
